<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.doopp.gauss.api.dao.UserDao">

    <select id="fetchList" resultType="com.doopp.gauss.api.entity.UserEntity">
        SELECT
          *
        FROM
            `user`
        <where>
            <if test="where!=null">
                #{where,jdbcType=VARCHAR}
            </if>
        </where>
        ORDER BY
            id DESC
        LIMIT
            <if test="offset!=null">#{offset,jdbcType=INTEGER}</if>
            <if test="offset==null">0</if>
            ,
            <if test="limit!=null">#{offset,jdbcType=INTEGER}</if>
            <if test="limit==null">30</if>
    </select>

    <select id="count" parameterType="String" resultType="Long">
        SELECT
            count(*)
        FROM
            `user`
        <where>
            <if test="where!=null">
                ${where}
            </if>
        </where>
    </select>

    <select id="fetchById" parameterType="Long" resultType="com.doopp.gauss.api.entity.UserEntity">
        SELECT
            *
        FROM
            `user`
        WHERE
            id = #{id,jdbcType=INTEGER}
        LIMIT 1
    </select>

    <select id="fetchListByIds" resultType="com.doopp.gauss.api.entity.UserEntity">
        SELECT
            *
        FROM
            `user`
        WHERE
            id in (${ids})
        LIMIT
            #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
    </select>

    <select id="fetchUserFriends" parameterType="Long" resultType="com.doopp.gauss.api.entity.UserEntity">
        SELECT
            *
        FROM
            `user`
        WHERE
            id in (select friends from `user` where id=#{id,jdbcType=INTEGER})
    </select>

    <select id="fetchByAccount" parameterType="String" resultType="com.doopp.gauss.api.entity.UserEntity">
        SELECT
            *
        FROM
            `user`
        WHERE
            account = #{account}
        LIMIT
            1
    </select>

    <delete id="delete" parameterType="int">
        DELETE
        FROM
            `user`
        WHERE
            id=${id,jdbcType=BIGINT}
    </delete>

    <insert id="create" parameterType="com.doopp.gauss.api.entity.UserEntity" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO `user`
          (id, account, password, salt, nickname, portrait, friends, gender, created_at)
        VALUES
          (${id}, #{account}, #{password}, #{salt}, #{nickname}, #{portrait}, #{friends}, ${gender}, ${created_at})
    </insert>

    <update id="update" parameterType="com.doopp.gauss.api.entity.UserEntity">
        UPDATE
            `user`
        SET
            password = #{password},
            nickname = #{nickname},
            gender = ${gender},
            friends = #{friends},
            portrait = #{portrait}
        WHERE
            `id`=${id,jdbcType=BIGINT}
    </update>

</mapper>